[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\OneDrive - m4n7\BK\HK231\EmbeddedSystem\esp-idf-ws\lab_05\build\bootloader\esp-idf\esptool_py" && python C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/OneDrive - m4n7/BK/HK231/EmbeddedSystem/esp-idf-ws/lab_05/build/bootloader/bootloader.bin""
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable app-template.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/OneDrive - m4n7/BK/HK231/EmbeddedSystem/esp-idf-ws/lab_05/build/app-template.bin
[7/8] cmd.exe /C "cd /D "D:\OneDrive - m4n7\BK\HK231\EmbeddedSystem\esp-idf-ws\lab_05\build\esp-idf\esptool_py" && python C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/OneDrive - m4n7/BK/HK231/EmbeddedSystem/esp-idf-ws/lab_05/build/partition_table/partition-table.bin" "D:/OneDrive - m4n7/BK/HK231/EmbeddedSystem/esp-idf-ws/lab_05/build/app-template.bin""
app-template.bin binary size 0x2c7f0 bytes. Smallest app partition is 0x100000 bytes. 0xd3810 bytes (83%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.2\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.2 -D SERIAL_TOOL=python;;C:/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/OneDrive - m4n7/BK/HK231/EmbeddedSystem/esp-idf-ws/lab_05/build" -P C:/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 app-template.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM4
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c0:49:ef:d0:86:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16453...
Writing at 0x00001000... (50 %)
Writing at 0x000076ad... (100 %)
Wrote 26384 bytes (16453 compressed) at 0x00001000 in 0.7 seconds (effective 307.6 kbit/s)...
Hash of data verified.
Compressed 182256 bytes to 96382...
Writing at 0x00010000... (16 %)
Writing at 0x0001baee... (33 %)
Writing at 0x00021407... (50 %)
Writing at 0x00026b3c... (66 %)
Writing at 0x0002f5d5... (83 %)
Writing at 0x00037379... (100 %)
Wrote 182256 bytes (96382 compressed) at 0x00010000 in 2.7 seconds (effective 541.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 529.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
